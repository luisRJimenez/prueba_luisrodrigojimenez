name: angular_laravel_mysql_phpmyadmin_nginx

services:
    laravel_api:
        container_name: laravel_api
        build: ./docker_configs/laravel_api
        restart: unless-stopped
        volumes:
            - ./projects/laravel_api:/var/www
        ports:
            - 9000:80
        networks:
            - envrionment_network

    angular_website:
        container_name: angular_website
        build: ./docker_configs/angular_website
        restart: unless-stopped
        volumes:
            - ./projects/angular_website:/usr/src/angular_website
        ports:
            - 5000:80
        networks:
            - envrionment_network
        command: ash -c "npm install && ng serve --host 0.0.0.0 --port 80"

    nginx:
        container_name: nginx
        build: ./docker_configs/nginx
        restart: unless-stopped
        links:
            - laravel_api
            - angular_website
            #- node_app
        volumes:
            - ./projects/angular_website:/usr/src/angular_website
            - ./projects/laravel_api:/var/www
            #- ./projects/node_app:/usr/src/node_app
        ports:
            - 80:80
            - 443:443
        networks:
            - envrionment_network

    #Use this only if you want to initialize a node container 
    # node_app:
    #     container_name: node_app
    #     build: ./docker_configs/node_app
    #     restart: unless-stopped
    #     volumes:
    #         - ./projects/node_app:/usr/src/node_app
    #     ports:
    #         - 7000:80
    #     networks:
    #         - envrionment_network
    #     command: ash -c "npm install && npm run watch"

    mysql_database:
        container_name: mysql_database
        image: mysql:8.0.29
        restart: always
        ports:
            - 3306:3306
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: example_database
            MYSQL_USER: dev
            MYSQL_PASSWORD: dev
        networks:
            - envrionment_network
        command: --default-authentication-plugin=mysql_native_password

    phpmyadmin:
        container_name: phpmyadmin
        image: phpmyadmin:5.1.1
        restart: always
        ports:
            - 8080:80
        volumes:
            - ./docker_configs/phpmyadmin/themes:/var/www/html/themes
        environment:
            - PMA_HOST=mysql_database
            - PMA_USER=root
            - PMA_PASSWORD=root
        networks:
            - envrionment_network

networks:
    envrionment_network:
        driver: bridge
